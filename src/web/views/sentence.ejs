<%# Expected inputs: 
 - jpn: a kanji string 
 - eng: an english string
 - character: the character used if sentence.ejs is rendered inside kanjiDetail.ejs (otherwise undefined)
 %>

<div class="jpn">
<%
    const splits = sentenceSplitter.split(jpn)

    let currentColor = 0
    let coloredSplits = []

    splits.forEach(word => {
        if (word == "「" || word == "(")
            currentColor += 1
        coloredSplits.push({
            word: word,
            color: 
                currentColor == 0 ? "inherit" :
                currentColor == 1 ? "red" :
                currentColor == 2 ? "green" :
                currentColor == 3 ? "yellow" :
                currentColor == 4 ? "purple" :
                "inherit"
        })
        if (word == "」" || word == ")")
            currentColor -= 1
    })

    const kana = splits
        .map(x =>
        {
            let readings = edict.getReadings(x, true)
            if (readings.length == 1)
                return readings[0]
            else
                return "[" + readings.join("/") + "]"
        })
        .join("")
%>
<%- 
    coloredSplits
    .map(split => 
        (
            (typeof character === "undefined" 
            ? "" 
            : "<a name='kanjiDetail_word' class='hiddenAnchor'>&nbsp;</a>")
        + "<a href='#' onclick='showDictionaryDefinition(\"word\"); return false;' style='color: thisColor'>word</a>")
            .replace(/word/g, split.word)
            .replace(/thisColor/g, split.color)
        
        )
    .join("")
%></div>

<% if (kana != null) { %>
    <div class="kana"><%= kana %></div>
<% } %>
<% if (eng != null) { %>
    <div class="eng"><%= eng %></div>
<% } %>